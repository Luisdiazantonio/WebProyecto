{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/luizpedro/Documentos/Web2/WebProyecto/src/app/database.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\n\nconst pool = mysql.createPool({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  port: parseInt(process.env.DB_PORT || '3306'),\n  waitForConnections: true,\n  connectionLimit: 10\n});\n\nconsole.log('DB_HOST:', process.env.DB_HOST);\nconsole.log('DB_USER:', process.env.DB_USER);\nconsole.log('DB_PASSWORD:', process.env.DB_PASSWORD);\nconsole.log('DB_NAME:', process.env.DB_NAME);\n\n\nexport default pool;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,IAAI;IACtC,oBAAoB;IACpB,iBAAiB;AACnB;AAEA,QAAQ,GAAG,CAAC,YAAY,QAAQ,GAAG,CAAC,OAAO;AAC3C,QAAQ,GAAG,CAAC,YAAY,QAAQ,GAAG,CAAC,OAAO;AAC3C,QAAQ,GAAG,CAAC,gBAAgB,QAAQ,GAAG,CAAC,WAAW;AACnD,QAAQ,GAAG,CAAC,YAAY,QAAQ,GAAG,CAAC,OAAO;uCAG5B","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///home/luizpedro/Documentos/Web2/WebProyecto/src/app/apilocal/usuarios/route.ts"],"sourcesContent":["import pool from '@/app/database';\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json();\n    const { username, password } = body;\n\n    if (!username || !password) {\n      return NextResponse.json({ error: 'Faltan datos' }, { status: 400 });\n    }\n\n    const [rows]: any = await pool.query(\n      'SELECT rol FROM usuarios WHERE nombre = ? AND contrasena = ?',\n      [username, password]\n    );\n\n    if (rows.length === 0) {\n      return NextResponse.json({ error: 'Usuario o contraseña incorrectos' }, { status: 401 });\n    }\n\n    return NextResponse.json({ rol: rows[0].rol });\n  } catch (error: any) {\n    console.error('Error en POST /apilocal/usuarios:', error);\n    return NextResponse.json(\n      { error: 'Error en la consulta', details: error.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET() {\n  try {\n    console.log('GET /apilocal/usuarios — consultando usuarios con rol = 3');\n    const [rows]: any = await pool.query(\n      'SELECT id_usuario, nombre FROM usuarios WHERE rol = 3'\n    );\n    console.log(`GET /apilocal/usuarios — encontrados ${rows.length} registros`);\n    return NextResponse.json(rows);\n  } catch (error: any) {\n    console.error('Error en GET /apilocal/usuarios:', error);\n    return NextResponse.json(\n      { error: 'Error al obtener usuarios', details: error.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(request: Request) {\n  try {\n    const { id } = await request.json();\n    console.log('DELETE /apilocal/usuarios — id recibido:', id);\n\n    if (!id) {\n      return NextResponse.json({ error: 'Falta el id del usuario' }, { status: 400 });\n    }\n\n    const [result]: any = await pool.query(\n      'DELETE FROM usuarios WHERE id_usuario = ? AND rol = 3',\n      [id]\n    );\n\n    if (result.affectedRows === 0) {\n      return NextResponse.json(\n        { error: 'Usuario no encontrado o no es junior' },\n        { status: 404 }\n      );\n    }\n\n    console.log(`DELETE /apilocal/usuarios — usuario ${id} eliminado`);\n    return NextResponse.json({ message: 'Usuario eliminado correctamente' });\n  } catch (error: any) {\n    console.error('Error en DELETE /apilocal/usuarios:', error);\n    return NextResponse.json(\n      { error: 'Error al eliminar usuario', details: error.message },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;QAE/B,IAAI,CAAC,YAAY,CAAC,UAAU;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,CAAC,KAAK,GAAQ,MAAM,wHAAA,CAAA,UAAI,CAAC,KAAK,CAClC,gEACA;YAAC;YAAU;SAAS;QAGtB,IAAI,KAAK,MAAM,KAAK,GAAG;YACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmC,GAAG;gBAAE,QAAQ;YAAI;QACxF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG;QAAC;IAC9C,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAAwB,SAAS,MAAM,OAAO;QAAC,GACxD;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAC,KAAK,GAAQ,MAAM,wHAAA,CAAA,UAAI,CAAC,KAAK,CAClC;QAEF,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,KAAK,MAAM,CAAC,UAAU,CAAC;QAC3E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA6B,SAAS,MAAM,OAAO;QAAC,GAC7D;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,OAAO,OAAgB;IAC3C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;QACjC,QAAQ,GAAG,CAAC,4CAA4C;QAExD,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QAC/E;QAEA,MAAM,CAAC,OAAO,GAAQ,MAAM,wHAAA,CAAA,UAAI,CAAC,KAAK,CACpC,yDACA;YAAC;SAAG;QAGN,IAAI,OAAO,YAAY,KAAK,GAAG;YAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuC,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC,CAAC,oCAAoC,EAAE,GAAG,UAAU,CAAC;QACjE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAkC;IACxE,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA6B,SAAS,MAAM,OAAO;QAAC,GAC7D;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}